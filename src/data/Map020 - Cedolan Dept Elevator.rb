# Cedolan City (7)
#   Cedolan Dept. 1F (14)
#     Cedolan Dept. Elevator (20)
map(
  tileset_id: 10,
  autoplay_bgm: true,
  bgm: audio(name: "Poke Mart", volume: 80),
  events: [

    event(
      id: 1,
      name: "Exit",
      x: 2,
      y: 6,
      page_0: page(
        trigger: :player_touch,
        commands: [
          play_se(audio(name: "Door exit", volume: 80)),
          change_tone(red: -255, green: -255, blue: -255, frames: 6),
          wait(8),
          *condition(
            variable: v(10),
            operation: "==",
            constant: 5,
            then: [
              transfer_player(map: 18, x: 6, y: 1, direction: :retain, fading: false),
            ],
            else: condition(
              variable: v(10),
              operation: "==",
              constant: 4,
              then: [
                transfer_player(map: 17, x: 6, y: 1, direction: :retain, fading: false),
              ],
              else: condition(
                variable: v(10),
                operation: "==",
                constant: 3,
                then: [
                  transfer_player(map: 16, x: 6, y: 1, direction: :retain, fading: false),
                ],
                else: condition(
                  variable: v(10),
                  operation: "==",
                  constant: 2,
                  then: [
                    transfer_player(map: 15, x: 6, y: 1, direction: :retain, fading: false),
                  ],
                  else: [
                    transfer_player(map: 14, x: 6, y: 1, direction: :retain, fading: false),
                  ],
                ),
              ),
            ),
          ),
          change_tone(red: 0, green: 0, blue: 0, frames: 6),
        ],
      ),
    ),

    event(
      id: 2,
      name: "Controls",
      x: 0,
      y: 2,
      page_0: page(
        commands: [
          *comment(
            "Ask the player which the floor they want to go to, ",
            "and store it in Game Variable 11.",
            "The difference between this and the current floor (in ",
            "Game Variable 10) determines which wall animation is ",
            "played, as well as how many times it is played.",
          ),
          text("Which floor do you want?"),
          *show_choices(
            choices: ["5F", "4F", "3F"],
            cancellation: 0,
            choice1: [
              control_variables(v(11), constant: 5),
            ],
            choice2: [
              control_variables(v(11), constant: 4),
            ],
            choice3: [
              control_variables(v(11), constant: 3),
            ],
          ),
          *show_choices(
            choices: ["2F", "1F", "Cancel"],
            cancellation: 3,
            choice1: [
              control_variables(v(11), constant: 2),
            ],
            choice2: [
              control_variables(v(11), constant: 1),
            ],
            choice3: [
              exit_event_processing,
            ],
          ),
          *comment(
            "Exit this event immediately if the destination floor is ",
            "the current floor.",
          ),
          *condition(
            variable: v(11),
            operation: "==",
            other_variable: v(10),
            then: [
              exit_event_processing,
            ],
          ),
          comment("Animate the elevator moving to the new floor."),
          play_se(audio(name: "Elevator moving", volume: 80)),
          label("Start"),
          *condition(
            variable: v(11),
            operation: ">",
            other_variable: v(10),
            then: [
              comment("Go up."),
              screen_shake(power: 4, speed: 9, frames: 12),
              *move_route(
                character(3),
                turn_left,
                route_wait(2),
                turn_right,
                route_wait(2),
                turn_down,
                route_wait(2),
                turn_left,
                route_wait(2),
                turn_right,
                route_wait(2),
                turn_down,
                route_wait(2),
              ),
              *move_route(
                character(4),
                turn_left,
                route_wait(2),
                turn_right,
                route_wait(2),
                turn_down,
                route_wait(2),
                turn_left,
                route_wait(2),
                turn_right,
                route_wait(2),
                turn_down,
                route_wait(2),
              ),
              *move_route(
                character(5),
                turn_left,
                route_wait(2),
                turn_right,
                route_wait(2),
                turn_down,
                route_wait(2),
                turn_left,
                route_wait(2),
                turn_right,
                route_wait(2),
                turn_down,
                route_wait(2),
              ),
              wait_completion,
              control_variables(v(10), "+=", constant: 1),
              jump_label("Start"),
            ],
          ),
          *condition(
            variable: v(11),
            operation: "<",
            other_variable: v(10),
            then: [
              comment("Go down."),
              screen_shake(power: 4, speed: 9, frames: 12),
              *move_route(
                character(3),
                turn_right,
                route_wait(2),
                turn_left,
                route_wait(2),
                turn_down,
                route_wait(2),
                turn_right,
                route_wait(2),
                turn_left,
                route_wait(2),
                turn_down,
                route_wait(2),
              ),
              *move_route(
                character(4),
                turn_right,
                route_wait(2),
                turn_left,
                route_wait(2),
                turn_down,
                route_wait(2),
                turn_right,
                route_wait(2),
                turn_left,
                route_wait(2),
                turn_down,
                route_wait(2),
              ),
              *move_route(
                character(5),
                turn_right,
                route_wait(2),
                turn_left,
                route_wait(2),
                turn_down,
                route_wait(2),
                turn_right,
                route_wait(2),
                turn_left,
                route_wait(2),
                turn_down,
                route_wait(2),
              ),
              wait_completion,
              control_variables(v(10), "-=", constant: 1),
              jump_label("Start"),
            ],
          ),
          stop_se,
          play_se(audio(name: "Elevator end", volume: 80)),
        ],
      ),
    ),

    event(
      id: 3,
      name: "Wall left",
      x: 1,
      y: 2,
      page_0: page(
        graphic: graphic(
          name: "elevatorwall",
        ),
      ),
    ),

    event(
      id: 4,
      name: "Wall middle",
      x: 2,
      y: 2,
      page_0: page(
        graphic: graphic(
          name: "elevatorwall",
        ),
      ),
    ),

    event(
      id: 5,
      name: "Wall right",
      x: 3,
      y: 2,
      page_0: page(
        graphic: graphic(
          name: "elevatorwall",
        ),
      ),
    ),

  ],
  data: table(
    x: 20,
    y: 15,
    z: 3,
    data: [
       736,  737,  737,  737,  740,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       744,  745,  745,  745,  748,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       752,  753,  753,  753,  756,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       760,  761,  761,  761,  761,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       768,  770,  770,  770,  769,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       768,  769,  769,  769,  769,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
       384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,  384,

         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,  576,  577,  578,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,  584,  585,  586,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    ],
  ),
)
